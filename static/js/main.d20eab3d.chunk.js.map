{"version":3,"sources":["serviceWorker.js","sectionDataTable.jsx","dump.js","sections.jsx","bluestack.jsx","index.js"],"names":["Boolean","window","location","hostname","match","SectionDataTable","props","state","monthsArr","Fragment","style","marginTop","border","boxShadow","width","display","flexDirection","flex","listStyle","backgroundColor","margin","padding","this","data","map","item","index","date","Date","createdOn","currentDate","getMonth","getFullYear","getDay","className","Math","ceil","getTime","src","image_url","height","marginLeft","position","name","region","href","csv","marginRight","report","React","Component","previousDump","currentDump","upcomingDump","Sections","updateTab","e","id","target","value","setState","active","cursor","fontWeight","color","marginBottom","onClick","paddingBottom","borderBottom","Bluestack","fontSize","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.d20eab3d.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\n\nexport default class SectionDataTable extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {};\n        this.monthsArr = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n    }\n    \n    render() {\n        return (\n            <React.Fragment>\n                <div style={{\n                        marginTop: '30px',\n                        border: '3px solid #e7e7e7',\n                        boxShadow: '7px 10px 12px rgba(0,0,0,0.04)',\n                        width: '80%'\n                        \n\n                    }}>\n                        <ul style={{\n                            display: 'flex',\n                            flexDirection:'row',\n                            flex: '0 0 25%',\n                            listStyle: 'none',\n                            backgroundColor: '#e7e7e7',\n                            margin: '0',\n                            padding: '15px 0 10px 20px'\n                        }}>\n                            <li style={{\n                                width: '200px'\n                            }}>\n                                Date\n                            </li>\n                            <li style={{\n                                width: '200px'\n                                }}>\n                                Campaign\n                            </li>\n                            <li style={{\n                                width: '200px'\n                                }}>\n                                View\n                            </li>\n                            <li>Action</li>\n                            <li></li>\n\n                        </ul>\n                        <ul style={{\n                            listStyle: 'none',\n                            padding: 0\n                        }}>\n                            {this.props.data.map((item, index) => {\n                                let date = new Date(item.createdOn);\n                                let currentDate = new Date();\n                                return (\n                                <li>\n                                    <ul style={{\n                                        display: 'flex',\n                                        flexDirection: 'row',\n                                        listStyle: 'none',\n                                        padding: '0px 0px 0px 2%',\n                                        \n                                    }}>\n                                        <li style={{\n                                    width: '200px'\n                                        }}>\n                                            <span>\n                                                {`${this.monthsArr[date.getMonth()]} ${date.getFullYear()}, ${date.getDay()}`}\n                                                <br/>\n                                                <label className='italic'>\n                                                    {`${Math.ceil((currentDate.getTime() - date.getTime())/(1000 * 3600 * 24))} Days Ago`}\n                                                </label>\n                                            </span>\n                                        </li>\n                                        <li style={{\n                                    width: '200px'\n                                        }}>\n                                        <span>\n                                            <img src={item.image_url} width='40' height={40}></img>\n                                        </span>\n                                        <span style={{marginLeft:'10px', position: 'absolute'}}>\n                                            {item.name}\n                                            <br/> \n                                            <label className='italic'>{item.region}</label>\n                                        </span>    \n                                    </li>\n\n                                        <li style={{\n                                    width: '200px'\n                                }}>View Price</li>\n                                        <li style={{\n                                    width: '100px'\n                                }}><a href={item.csv}>CSV</a></li>\n                                        <li style={{\n                                    marginRight: '5%'\n                                }}><a href={item.report}>Report</a></li>\n                                        <li>Schedule Again</li>\n                                    </ul>\n                                </li>\n                            )})}\n                            \n                        </ul>\n                    </div>\n            </React.Fragment>\n        );\n    }\n}","export const previousDump = {\n    \"data\": [{\n        \"name\": \"Test Whatsapp\",\n        \"region\": \"US\",\n        \"createdOn\": 1559807714999,\n        \"price\": \"Price info of Test Whatsapp\",\n        \"csv\": \"Some CSV link for Whatsapp\",\n        \"report\": \"Some report link for Whatsapp\",\n        \"image_url\":\"Some image url of the campaign\" \n      },\n      {\n        \"name\": \"Super Jewels Quest\",\n        \"region\": \"CA, FR\",\n        \"createdOn\": 1559806715124,\n        \"price\": \"Price info of Super Jewels Quest\",\n        \"csv\": \"Some CSV link for Super Jewels Quest\",\n        \"report\": \"Some report link for Super Jewels Ques\",\n        \"image_url\":\"Some image url of the campaign\"\n      },\n      {\n        \"name\": \"Mole Slayer\",\n        \"region\": \"FR\",\n        \"createdOn\": 1559806711124,\n        \"price\": \"Price info of Mole Slayer\",\n        \"csv\": \"Some CSV link for Mole Slayer\",\n        \"report\": \"Some report link for Mole Slayer\",\n        \"image_url\":\"Some image url of the campaign\"\n      },\n      {\n        \"name\": \"Mancala Mix\",\n        \"region\": \"JP\",\n        \"createdOn\": 1559806680124,\n        \"price\": \"Price info of Mancala Mix\",\n        \"csv\": \"Some CSV link for Mancala Mix\",\n        \"report\": \"Some report link for Mancala Mix\",\n        \"image_url\":\"Some image url of the campaign\"\n      }\n    ]\n  }\n  \n  export const currentDump = {\n    \"data\": [{\n        \"name\": \"Pubg\",\n        \"region\": \"US\",\n        \"createdOn\": 1559807714999,\n        \"price\": \"Price info of Test Whatsapp\",\n        \"csv\": \"Some CSV link for Whatsapp\",\n        \"report\": \"Some report link for Whatsapp\",\n        \"image_url\":\"Some image url of the campaign\" \n      },\n      {\n        \"name\": \"Clash of clans\",\n        \"region\": \"CA, FR\",\n        \"createdOn\": 1559806715124,\n        \"price\": \"Price info of Super Jewels Quest\",\n        \"csv\": \"Some CSV link for Super Jewels Quest\",\n        \"report\": \"Some report link for Super Jewels Ques\",\n        \"image_url\":\"Some image url of the campaign\"\n      },\n      {\n        \"name\": \"Mole Slayer\",\n        \"region\": \"FR\",\n        \"createdOn\": 1559806711124,\n        \"price\": \"Price info of Mole Slayer\",\n        \"csv\": \"Some CSV link for Mole Slayer\",\n        \"report\": \"Some report link for Mole Slayer\",\n        \"image_url\":\"Some image url of the campaign\"\n      },\n      {\n        \"name\": \"Counter Strike\",\n        \"region\": \"JP\",\n        \"createdOn\": 1559806680124,\n        \"price\": \"Price info of Mancala Mix\",\n        \"csv\": \"Some CSV link for Mancala Mix\",\n        \"report\": \"Some report link for Mancala Mix\",\n        \"image_url\":\"Some image url of the campaign\"\n      }\n    ]\n  }\n  export const upcomingDump = {\n    \"data\": [{\n        \"name\": \"Fornite\",\n        \"region\": \"US\",\n        \"createdOn\": 1559807714999,\n        \"price\": \"Price info of Test Whatsapp\",\n        \"csv\": \"Some CSV link for Whatsapp\",\n        \"report\": \"Some report link for Whatsapp\",\n        \"image_url\":\"Some image url of the campaign\" \n      },\n      {\n        \"name\": \"Mario\",\n        \"region\": \"CA, FR\",\n        \"createdOn\": 1559806715124,\n        \"price\": \"Price info of Super Jewels Quest\",\n        \"csv\": \"Some CSV link for Super Jewels Quest\",\n        \"report\": \"Some report link for Super Jewels Ques\",\n        \"image_url\":\"Some image url of the campaign\"\n      },\n      {\n        \"name\": \"COD\",\n        \"region\": \"FR\",\n        \"createdOn\": 1559806711124,\n        \"price\": \"Price info of Mole Slayer\",\n        \"csv\": \"Some CSV link for Mole Slayer\",\n        \"report\": \"Some report link for Mole Slayer\",\n        \"image_url\":\"Some image url of the campaign\"\n      },\n      {\n        \"name\": \"Mancala Mix\",\n        \"region\": \"JP\",\n        \"createdOn\": 1559806680124,\n        \"price\": \"Price info of Mancala Mix\",\n        \"csv\": \"Some CSV link for Mancala Mix\",\n        \"report\": \"Some report link for Mancala Mix\",\n        \"image_url\":\"Some image url of the campaign\"\n      }\n    ]\n  }","import React from 'react';\nimport SectionDataTable from './sectionDataTable';\nimport { previousDump, currentDump, upcomingDump } from './dump'\n\nclass Sections extends React.Component {\n\n    constructor(props){\n        super(props);\n       this.state = {\n           active: 'upcoming'\n       }\n    }\n    updateTab = (e) => {\n        let id = e.target.id;\n        let value = '';\n        switch(id){\n            case 'upcoming':\n            case 'past':\n            case 'current':\n                value = id;\n                break;\n            default:\n                break;\n        }\n        if(value){\n            this.setState({\n                active: value\n            })\n        }\n    }\n    render() {\n        let data = upcomingDump.data;\n        if(this.state.active == 'current') {\n            data = currentDump.data\n        } else if(this.state.active == 'past') {\n            data = previousDump.data\n        }\n        return (\n            <React.Fragment>\n                <div style={{\n                        marginLeft: '20%'\n                    }}\n                    className='section'\n                >\n                    <h2>\n                        Manage Campaigns\n                    </h2>\n                    <ul style={{\n                        display: 'flex',\n                        flexDirection:'row',\n                        flex: '0 0 25%',\n                        listStyle: 'none',\n                        marginLeft: '-2.5%',\n                        cursor:'pointer',\n                        fontWeight: '600',\n                        color: '#252525d0',\n                        marginBottom: 0\n                    }} onClick={\n                        (e) => this.updateTab(e)\n                    }>\n                        <li style={{\n                            marginRight: '20px',\n                            paddingBottom: '10px'\n                        }} id='upcoming' className={this.state.active == 'upcoming' ? 'active' : ''}>\n                          Upcoming Campaigns\n                        </li>\n                        <li style={{\n                            marginRight: '20px',\n                            paddingBottom: '10px'\n                        }} id='current' className={this.state.active == 'current' ? 'active' : ''}>\n                            Live Campaigns\n                        </li>\n                        <li id='past' className={this.state.active == 'past' ? 'active' : ''} style={{\n                            paddingBottom: '10px'\n                        }}>\n                            Past Campaigns\n                        </li>\n                    </ul>\n                    <div style={{ \n                        borderBottom: '1px solid #e7e7e7',\n                        width: '80%'\n                        }}></div>\n                    <SectionDataTable data={data} />\n                    \n                </div>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default Sections;\n","import React from 'react';\nimport Sections from './sections';\nimport './bluestack.css';\nexport default class Bluestack extends React.Component{\n\n    render() {\n        return (\n            <React.Fragment>\n                <div style={{\n                    backgroundColor: 'black',\n                    color: 'white',\n                    fontSize: '20px',\n                    fontWeight: 400,\n                    padding: '15px 0'\n                }}>\n                    <label style={{\n                        marginLeft: '20%',\n                        \n                    }}>\n                        Bluestacks\n                    </label>\n\n                </div>\n                <Sections />\n            </React.Fragment>\n        );\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport Bluestack from './bluestack';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Bluestack/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}